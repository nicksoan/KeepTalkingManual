@page "/wires3"
@using KeepTalkingManual.Lib.Models
@rendermode InteractiveServer

<h3>Wires3</h3>

<ul id="instructions">
    @if (_wireModule != null)
    {
        @foreach (var item in _wireModule.Instructions)
        {
            <li>@item</li>
        }
    }

</ul>
<div class="container">
    <div class="row form-group">

        <div class="col-md-4">
            <label for="wireList">List Wires:</label>
        </div>
        <div class="col-md-8">
            <input type="text" id="wireList" @oninput="(e) => HandleInput(e)" />
        </div>
        @* <div class="col-md-4">
        <label for="redWireCount">Red Wire Count:</label>
        </div>
        <div class="col-md-8">
        <input type="text" id="redWireCount" value="@redWireCount" @oninput="(e) => HandleInput(e, 3)" />
        </div>

        <div class="col-md-4">
        <label for="blackWireCount">Black Wire Count:</label>
        </div>
        <div class="col-md-8">
        <input type="text" id="blackWireCount" value="@blueWireCount" @oninput="(e) => HandleInput(e, 1)" />
        </div>

        <div class="col-md-4">
        <label for="whiteWireCount">White Wire Count:</label>
        </div>
        <div class="col-md-4">
        <input type="text" id="whiteWireCount" value="@whiteWireCount" @oninput="(e) => HandleInput(e, 2)" />
        </div>
        <div class="col-md-4">
        <input type="checkbox" id="whiteWireCount" checked="@whiteWireLast" @oninput="CheckboxChanged_LastWhite"/>
        </div> *@


    </div>
</div>
@code {
    private WireModule _wireModule;

    private void HandleInput(ChangeEventArgs e)
    {
        DetermineAction(e.Value.ToString());
    }

    private void DetermineAction(string wireList)
    {
        _wireModule = new WireModule(wireList);
    }
}